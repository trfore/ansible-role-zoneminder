[tox]
minversion = 4.0.0
envlist =
    lint
    py-ansible{2.17}-debian{11,12}-default
    py-ansible{2.17}-ubuntu{20,22}-{default,mysql}

[testenv]
description =
    ubuntu{20,22}-default: Run molecule scenario on Ubuntu (default)
    debian{11,12}-default: Run molecule scenario on Debian (default)
    ubuntu{20,22}-mysql: Run molecule scenario on Ubuntu (mysql)
deps =
    ansible2.17: ansible-core == 2.17.*
    -r ./requirements/dev-requirements.txt
commands =
    default: molecule {posargs:test -s default}
    mysql: molecule {posargs:test -s mysql}
setenv =
    ANSIBLE_COLLECTIONS_PATH={work_dir}/{env_name}/.ansible/collections/ansible_collections
    ANSIBLE_ROLES_PATH={work_dir}/{env_name}/.ansible/roles
    MOLECULE_EPHEMERAL_DIRECTORY={work_dir}/{env_name}/.cache/molecule
    MOLECULE_NAME={env_name}
    debian11: MOLECULE_IMAGE=trfore/docker-debian11-systemd
    debian12: MOLECULE_IMAGE=trfore/docker-debian12-systemd
    ubuntu20: MOLECULE_IMAGE=trfore/docker-ubuntu2004-systemd
    ubuntu22: MOLECULE_IMAGE=trfore/docker-ubuntu2204-systemd
    PY_COLORS=1
    TOX_ENVNAME={env_name}
passenv =
    DOCKER_HOST
    MOLECULE_IMAGE

[testenv:lint]
description = Run all linting tasks
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run {posargs:--all --show-diff-on-failure}
setenv =
    TOX_ENVNAME={env_name}
